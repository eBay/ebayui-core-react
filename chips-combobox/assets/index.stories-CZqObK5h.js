import{j as E,c as j,a as r}from"./index-Zi3BSDNR.js";import{r as x,R as A}from"./index-CBqU2yxZ.js";import{E as V,a as n}from"./combobox-CDPC8LxU.js";import"./array.polyfill.flat-Ds4FN2Ds.js";import{a as k}from"./utils-BEgyKUkQ.js";import{E as K}from"./chip-DJaAC8dX.js";import"./_commonjsHelpers-BosuxZz1.js";import"./hooks-Cja3Vkk9.js";import"./dropdown-EYwX6TfS.js";import"./index-BtM5VmRH.js";import"./index-_o4FI5ZO.js";import"./icon-D5SbZs9b.js";const w=({className:c,fluid:O,error:S,disabled:l,selected:p,defaultSelected:d,a11yDeleteButtonText:D="Remove",onChange:t,children:R,..._})=>{const v=k(R,n),[T,m]=x.useState(d||[]),a=p||T,[B,b]=x.useState(""),u=A.useRef(null),h=(e,o)=>{const s=[...a,o];m(s),t==null||t(e,{selected:[...s]}),b("")},I=(e,o)=>{const s=a.filter((Y,g)=>g!==o);m(s),t==null||t(e,{selected:[...s]})},N=e=>{if(e.key==="Enter"){const o=e.target.value;e.preventDefault(),o&&!a.includes(o)&&h(e,o)}},W=(e,o)=>{b(o.currentInputValue)};if(p&&d)throw new Error('EbayChipsCombobox: You cannot use "selected" and "defaultSelected" at the same time.');if(p&&!t)throw new Error('EbayChipsCombobox: You must provide an "onChange" prop when using the "selected" prop.');return E("span",{ref:u,className:j(c,"chips-combobox",{"chips-combobox--fluid":O,"chips-combobox--error":S}),"aria-disabled":l?"true":void 0,children:[a.length?r("ul",{className:"chips-combobox__items",children:a.map((e,o)=>r("li",{children:r(K,{a11yDeleteButtonText:`${D} ${e}`,onDelete:s=>I(s,o),disabled:l,children:e})},o))}):null,r(V,{..._,className:"chips-combobox__combobox",disabled:l,dropdownRef:u,value:B,autocomplete:"list",onSelect:(e,o)=>h(e,o.selectedOption.text),onInputChange:W,onKeyDown:N,children:v.filter(e=>!a.includes(e.props.text))})]})},X={component:w,title:"form input/ebay-chips-combobox",argTypes:{expanded:{control:"boolean",description:"Whether the combobox is expanded"},fluid:{control:"boolean",description:"Whether the combobox should take full width"},error:{control:"boolean",description:"Whether the combobox is in an error state"},listSelection:{control:"select",options:["manual","automatic"],description:"Selection mode for the list"},selected:{control:"array",description:"Currently selected options"},disabled:{control:"boolean",description:"Whether the combobox is disabled"},a11yDeleteButtonText:{control:"text",description:"Accessibility text for the delete button"},onExpand:{action:"onExpand"},onCollapse:{action:"onCollapse"},onChange:{action:"onChange"}}},i=c=>E(w,{placeholder:"Add item",...c,children:[r(n,{text:"Chip 1"}),r(n,{text:"Chip 2"}),r(n,{text:"Chip 3"})]});i.args={expanded:!1,fluid:!1,error:!1,listSelection:"manual",selected:[],disabled:!1,a11yDeleteButtonText:"Remove"};var f,y,C;i.parameters={...i.parameters,docs:{...(f=i.parameters)==null?void 0:f.docs,source:{originalSource:`args => <EbayChipsCombobox placeholder="Add item" {...args}>
        <EbayComboboxOption text="Chip 1" />
        <EbayComboboxOption text="Chip 2" />
        <EbayComboboxOption text="Chip 3" />
    </EbayChipsCombobox>`,...(C=(y=i.parameters)==null?void 0:y.docs)==null?void 0:C.source}}};const Z=["Default"];export{i as Default,Z as __namedExportsOrder,X as default};
