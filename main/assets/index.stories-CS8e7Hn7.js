import{j as l,a as e}from"./index-Zi3BSDNR.js";import{R as i}from"./index-CBqU2yxZ.js";import{E as c,a,b as N}from"./combobox-BNe42AQm.js";import{E as P}from"./icon-D1Uav-6a.js";import"./_commonjsHelpers-BosuxZz1.js";import"./hooks-CxrULycr.js";import"./array.polyfill.flat-DFcLZuRs.js";import"./utils-BAQ5gmlm.js";import"./dropdown-HjWnN08T.js";import"./index-BtM5VmRH.js";import"./index-BQcbYkqw.js";import"./index-DVEpxHKN.js";const y=[{name:"Afghanistan",code:"AF"},{name:"Ã…landIslands",code:"AX"},{name:"Albania",code:"AL"},{name:"Algeria",code:"DZ"},{name:"AmericanSamoa",code:"AS"},{name:"AndorrA",code:"AD"},{name:"Angola",code:"AO"},{name:"Anguilla",code:"AI"},{name:"Antarctica",code:"AQ"},{name:"Antiguaand Barbuda",code:"AG"},{name:"Argentina",code:"AR"},{name:"Armenia",code:"AM"},{name:"Aruba",code:"AW"},{name:"Australia",code:"AU"},{name:"Austria",code:"AT"},{name:"Azerbaijan",code:"AZ"},{name:"Bahamas",code:"BS"},{name:"Bahrain",code:"BH"},{name:"Bangladesh",code:"BD"},{name:"Barbados",code:"BB"},{name:"Belarus",code:"BY"},{name:"Belgium",code:"BE"},{name:"Belize",code:"BZ"},{name:"Benin",code:"BJ"},{name:"Bermuda",code:"BM"},{name:"Bhutan",code:"BT"},{name:"Bolivia",code:"BO"},{name:"Bosniaand Herzegovina",code:"BA"},{name:"Botswana",code:"BW"},{name:"BouvetIsland",code:"BV"},{name:"Brazil",code:"BR"},{name:"BritishIndian Ocean Territory",code:"IO"},{name:"BruneiDarussalam",code:"BN"},{name:"Bulgaria",code:"BG"},{name:"BurkinaFaso",code:"BF"},{name:"Burundi",code:"BI"},{name:"Cambodia",code:"KH"},{name:"Cameroon",code:"CM"},{name:"Canada",code:"CA"},{name:"CapeVerde",code:"CV"},{name:"CaymanIslands",code:"KY"},{name:"CentralAfrican Republic",code:"CF"},{name:"Chad",code:"TD"},{name:"Chile",code:"CL"},{name:"China",code:"CN"},{name:"ChristmasIsland",code:"CX"},{name:"Cocos(Keeling) Islands",code:"CC"},{name:"Colombia",code:"CO"},{name:"Comoros",code:"KM"},{name:"Congo",code:"CG"},{name:"Congo The Democratic Republic of the",code:"CD"},{name:"CookIslands",code:"CK"},{name:"CostaRica",code:"CR"},{name:"CoteD'Ivoire",code:"CI"},{name:"Croatia",code:"HR"},{name:"Cuba",code:"CU"},{name:"Cyprus",code:"CY"},{name:"CzechRepublic",code:"CZ"},{name:"Denmark",code:"DK"},{name:"Djibouti",code:"DJ"},{name:"Dominica",code:"DM"},{name:"DominicanRepublic",code:"DO"},{name:"Ecuador",code:"EC"},{name:"Egypt",code:"EG"},{name:"ElSalvador",code:"SV"},{name:"EquatorialGuinea",code:"GQ"},{name:"Eritrea",code:"ER"},{name:"Estonia",code:"EE"},{name:"Ethiopia",code:"ET"},{name:"FalklandIslands (Malvinas)",code:"FK"},{name:"FaroeIslands",code:"FO"},{name:"Fiji",code:"FJ"},{name:"Finland",code:"FI"},{name:"France",code:"FR"},{name:"FrenchGuiana",code:"GF"},{name:"FrenchPolynesia",code:"PF"},{name:"FrenchSouthern Territories",code:"TF"},{name:"Gabon",code:"GA"},{name:"Gambia",code:"GM"},{name:"Georgia",code:"GE"},{name:"Germany",code:"DE"},{name:"Ghana",code:"GH"},{name:"Gibraltar",code:"GI"},{name:"Greece",code:"GR"},{name:"Greenland",code:"GL"},{name:"Grenada",code:"GD"},{name:"Guadeloupe",code:"GP"},{name:"Guam",code:"GU"},{name:"Guatemala",code:"GT"},{name:"Guernsey",code:"GG"},{name:"Guinea",code:"GN"},{name:"GuineaBissau",code:"GW"},{name:"Guyana",code:"GY"},{name:"Haiti",code:"HT"},{name:"HeardIsland and Mcdonald Islands",code:"HM"},{name:"HolySee (Vatican City State)",code:"VA"},{name:"Honduras",code:"HN"},{name:"HongKong",code:"HK"},{name:"Hungary",code:"HU"},{name:"Iceland",code:"IS"},{name:"India",code:"IN"},{name:"Indonesia",code:"ID"},{name:"Iran Islamic Republic Of",code:"IR"},{name:"Iraq",code:"IQ"},{name:"Ireland",code:"IE"},{name:"Isleof Man",code:"IM"},{name:"Israel",code:"IL"},{name:"Italy",code:"IT"},{name:"Jamaica",code:"JM"},{name:"Japan",code:"JP"},{name:"Jersey",code:"JE"},{name:"Jordan",code:"JO"},{name:"Kazakhstan",code:"KZ"},{name:"Kenya",code:"KE"},{name:"Kiribati",code:"KI"},{name:"Korea Democratic People'S Republic of",code:"KP"},{name:"Korea Republic of",code:"KR"},{name:"Kuwait",code:"KW"},{name:"Kyrgyzstan",code:"KG"},{name:"LaoPeopleS Democratic Republic",code:"LA"},{name:"Latvia",code:"LV"},{name:"Lebanon",code:"LB"},{name:"Lesotho",code:"LS"},{name:"Liberia",code:"LR"},{name:"LibyanArab Jamahiriya",code:"LY"},{name:"Liechtenstein",code:"LI"},{name:"Lithuania",code:"LT"},{name:"Luxembourg",code:"LU"},{name:"Macao",code:"MO"},{name:"Macedonia The Former Yugoslav Republic of",code:"MK"},{name:"Madagascar",code:"MG"},{name:"Malawi",code:"MW"},{name:"Malaysia",code:"MY"},{name:"Maldives",code:"MV"},{name:"Mali",code:"ML"},{name:"Malta",code:"MT"},{name:"MarshallIslands",code:"MH"},{name:"Martinique",code:"MQ"},{name:"Mauritania",code:"MR"},{name:"Mauritius",code:"MU"},{name:"Mayotte",code:"YT"},{name:"Mexico",code:"MX"},{name:"Micronesia Federated States of",code:"FM"},{name:"Moldova Republic of",code:"MD"},{name:"Monaco",code:"MC"},{name:"Mongolia",code:"MN"},{name:"Montserrat",code:"MS"},{name:"Morocco",code:"MA"},{name:"Mozambique",code:"MZ"},{name:"Myanmar",code:"MM"},{name:"Namibia",code:"NA"},{name:"Nauru",code:"NR"},{name:"Nepal",code:"NP"},{name:"Netherlands",code:"NL"},{name:"NetherlandsAntilles",code:"AN"},{name:"NewCaledonia",code:"NC"},{name:"NewZealand",code:"NZ"},{name:"Nicaragua",code:"NI"},{name:"Niger",code:"NE"},{name:"Nigeria",code:"NG"},{name:"Niue",code:"NU"},{name:"NorfolkIsland",code:"NF"},{name:"NorthernMariana Islands",code:"MP"},{name:"Norway",code:"NO"},{name:"Oman",code:"OM"},{name:"Pakistan",code:"PK"},{name:"Palau",code:"PW"},{name:"PalestinianTerritory Occupied",code:"PS"},{name:"Panama",code:"PA"},{name:"PapuaNew Guinea",code:"PG"},{name:"Paraguay",code:"PY"},{name:"Peru",code:"PE"},{name:"Philippines",code:"PH"},{name:"Pitcairn",code:"PN"},{name:"Poland",code:"PL"},{name:"Portugal",code:"PT"},{name:"PuertoRico",code:"PR"},{name:"Qatar",code:"QA"},{name:"Reunion",code:"RE"},{name:"Romania",code:"RO"},{name:"RussianFederation",code:"RU"},{name:"RWANDA",code:"RW"},{name:"SaintHelena",code:"SH"},{name:"SaintKitts and Nevis",code:"KN"},{name:"SaintLucia",code:"LC"},{name:"SaintPierre and Miquelon",code:"PM"},{name:"SaintVincent and the Grenadines",code:"VC"},{name:"Samoa",code:"WS"},{name:"SanMarino",code:"SM"},{name:"SaoTome and Principe",code:"ST"},{name:"SaudiArabia",code:"SA"},{name:"Senegal",code:"SN"},{name:"Serbiaand Montenegro",code:"CS"},{name:"Seychelles",code:"SC"},{name:"SierraLeone",code:"SL"},{name:"Singapore",code:"SG"},{name:"Slovakia",code:"SK"},{name:"Slovenia",code:"SI"},{name:"SolomonIslands",code:"SB"},{name:"Somalia",code:"SO"},{name:"SouthAfrica",code:"ZA"},{name:"SouthGeorgia and the South Sandwich Islands",code:"GS"},{name:"Spain",code:"ES"},{name:"SriLanka",code:"LK"},{name:"Sudan",code:"SD"},{name:"Suriname",code:"SR"},{name:"Svalbardand Jan Mayen",code:"SJ"},{name:"Swaziland",code:"SZ"},{name:"Sweden",code:"SE"},{name:"Switzerland",code:"CH"},{name:"SyrianArab Republic",code:"SY"},{name:"Taiwan Province of China",code:"TW"},{name:"Tajikistan",code:"TJ"},{name:"Tanzania United Republic of",code:"TZ"},{name:"Thailand",code:"TH"},{name:"TimorLeste",code:"TL"},{name:"Togo",code:"TG"},{name:"Tokelau",code:"TK"},{name:"Tonga",code:"TO"},{name:"Trinidadand Tobago",code:"TT"},{name:"Tunisia",code:"TN"},{name:"Turkey",code:"TR"},{name:"Turkmenistan",code:"TM"},{name:"Turksand Caicos Islands",code:"TC"},{name:"Tuvalu",code:"TV"},{name:"Uganda",code:"UG"},{name:"Ukraine",code:"UA"},{name:"UnitedArab Emirates",code:"AE"},{name:"UnitedKingdom",code:"GB"},{name:"United States",code:"US"},{name:"United States Minor Outlying Islands",code:"UM"},{name:"Uruguay",code:"UY"},{name:"Uzbekistan",code:"UZ"},{name:"Vanuatu",code:"VU"},{name:"Venezuela",code:"VE"},{name:"VietNam",code:"VN"},{name:"VirginIslands British",code:"VG"},{name:"VirginIslands U.S.",code:"VI"},{name:"Wallisand Futuna",code:"WF"},{name:"WesternSahara",code:"EH"},{name:"Yemen",code:"YE"},{name:"Zambia",code:"ZM"},{name:"Zimbabwe",code:"ZW"}],X={component:c,title:"form input/ebay-combobox",argTypes:{name:{control:{type:"text"},description:"used for the `name` attribute of the `<input>` element"},borderless:{type:"boolean",control:{type:"boolean"},description:"whether button has borders "},disabled:{type:"boolean",control:{type:"boolean"},description:"sets the disabled attribute of the input"},expanded:{control:{type:"boolean"},description:"sets whether the listbox is expanded"},autocomplete:{control:{type:"select"},table:{defaultValue:{summary:"none"}},options:["list","none"],description:"default is `none`; available values are `none` or `list`. For list, will automatically filter results while typing."},listSelection:{control:{type:"select"},table:{defaultValue:{summary:"automatic"}},options:["manual","automatic"],description:"default is `automatic`; available values are `automatic`, `manual`. If set to automatic will automatically fill in the input with the currently highlighted item when using the up/down keys."},floatingLabel:{control:{type:"text"},description:"The label to show on the combobox which moves up when focused"},fluid:{control:{type:"boolean"},type:"boolean",description:"If true, combobox will span the entire width of it's container"},onCollapse:{action:"onCollapse",table:{category:"Events"},description:" collapsed content"},onExpand:{action:"onExpand",table:{category:"Events"},description:" expanded content"},onChange:{action:"onChange",table:{category:"Events",defaultValue:{summary:"event, { currentInputValue, selectedOption: { text, value } }"}},description:"same as the `onChange` event, which fires on blur"},onInputChange:{action:"onInputChange",table:{category:"Events",defaultValue:{summary:"event, { currentInputValue, selectedOption: { text, value } }"}},description:"same as the `onInput` event, which fires with every keypress"},onSelect:{action:"onSelect",table:{category:"Events",defaultValue:{summary:"event, { currentInputValue, selectedOption: { text, value } }"}},description:"similar to a `<select>`, which fires when an option is clicked or selected"},onFloatingLabelInit:{action:"onFloatingLabelInit",table:{category:"Events"},description:"when floating label finishes initializing"},onFocus:{action:"onFocus",table:{category:"Events",defaultValue:{summary:"event, { currentInputValue, selectedOption: { text, value } }"}},description:"same as the `onFocus` event, which fires on focus"}}},m=o=>l(c,{...o,children:[e(a,{text:"August Campaign"}),e(a,{text:"4th of July Sale (paused)"}),e(a,{text:"Basic Offer"}),e(a,{text:"Basic Offer 1"}),e(a,{text:"Basic Offer 2"})]}),d=o=>l(c,{...o,floatingLabel:o.floatingLabel||"Default Label",children:[e(a,{text:"August Campaign"}),e(a,{text:"4th of July Sale (paused)"}),e(a,{text:"Basic Offer"}),e(a,{text:"Basic Offer 1"}),e(a,{text:"Basic Offer 2"})]}),r=o=>l(c,{...o,autocomplete:"list",children:[e(a,{text:"August Campaign"}),e(a,{text:"4th of July Sale (paused)"}),e(a,{text:"Basic Offer"}),e(a,{text:"Basic Offer 1"}),e(a,{text:"Basic Offer 2"})]}),s=o=>{const[v,G]=i.useState(y),[R,b]=i.useState("none"),[L,u]=i.useState(""),h=i.useRef(),V=t=>new Promise(n=>{clearTimeout(h.current),h.current=setTimeout(()=>{const p=y.filter(w=>w.name.toLowerCase().startsWith(t.toLowerCase())).slice(0,10);n(p)},500)});return l(c,{...o,name:"country",autocomplete:R,value:L,onInputChange:async(t,n)=>{b("none"),u((n==null?void 0:n.currentInputValue)||"");const p=await V((n==null?void 0:n.currentInputValue)||"");G(p),b("list")},onSelect:(t,n)=>{u(n.currentInputValue)},children:[e(N,{onClick:()=>u(""),children:e(P,{name:"clear16"})}),v.map(t=>e(a,{text:t.name,value:t.code},t.name))]})};var C,f,g;m.parameters={...m.parameters,docs:{...(C=m.parameters)==null?void 0:C.docs,source:{originalSource:`args => <EbayCombobox {...args}>
        <EbayComboboxOption text="August Campaign" />
        <EbayComboboxOption text="4th of July Sale (paused)" />
        <EbayComboboxOption text="Basic Offer" />
        <EbayComboboxOption text="Basic Offer 1" />
        <EbayComboboxOption text="Basic Offer 2" />
    </EbayCombobox>`,...(g=(f=m.parameters)==null?void 0:f.docs)==null?void 0:g.source}}};var S,x,I;d.parameters={...d.parameters,docs:{...(S=d.parameters)==null?void 0:S.docs,source:{originalSource:`args => <EbayCombobox {...args} floatingLabel={args.floatingLabel || "Default Label"}>
        <EbayComboboxOption text="August Campaign" />
        <EbayComboboxOption text="4th of July Sale (paused)" />
        <EbayComboboxOption text="Basic Offer" />
        <EbayComboboxOption text="Basic Offer 1" />
        <EbayComboboxOption text="Basic Offer 2" />
    </EbayCombobox>`,...(I=(x=d.parameters)==null?void 0:x.docs)==null?void 0:I.source}}};var E,M,B;r.parameters={...r.parameters,docs:{...(E=r.parameters)==null?void 0:E.docs,source:{originalSource:`args => <EbayCombobox {...args} autocomplete="list">
        <EbayComboboxOption text="August Campaign" />
        <EbayComboboxOption text="4th of July Sale (paused)" />
        <EbayComboboxOption text="Basic Offer" />
        <EbayComboboxOption text="Basic Offer 1" />
        <EbayComboboxOption text="Basic Offer 2" />
    </EbayCombobox>`,...(B=(M=r.parameters)==null?void 0:M.docs)==null?void 0:B.source}}};var O,A,T;s.parameters={...s.parameters,docs:{...(O=s.parameters)==null?void 0:O.docs,source:{originalSource:`args => {
  const [options, setOptions] = React.useState(countries);
  const [autocomplete, setAutocomplete] = React.useState<'list' | 'none'>("none");
  const [value, setValue] = React.useState("");
  const timeoutRef = React.useRef<number>();
  const searchCountry = (searchTerm): Promise<typeof countries> => {
    return new Promise(resolve => {
      clearTimeout(timeoutRef.current);
      timeoutRef.current = ((setTimeout(() => {
        const filteredOptions = countries.filter(country => country.name.toLowerCase().startsWith(searchTerm.toLowerCase())).slice(0, 10);
        resolve(filteredOptions);
      }, 500) as unknown) as number);
    });
  };
  const handleInputChange = async (event: ChangeEvent<HTMLInputElement>, data?: {
    currentInputValue: string;
  }) => {
    setAutocomplete('none');
    setValue(data?.currentInputValue || '');
    const filteredOptions = await searchCountry(data?.currentInputValue || '');
    setOptions(filteredOptions);
    setAutocomplete('list');
  };
  const handleSelect: ComboboxSelectHandler = (event, data) => {
    setValue(data.currentInputValue);
  };
  return <EbayCombobox {...args} name="country" autocomplete={autocomplete} value={value} onInputChange={handleInputChange} onSelect={handleSelect}>
            <EbayComboboxButton onClick={() => setValue('')}>
                <EbayIcon name="clear16" />
            </EbayComboboxButton>
            {options.map(option => <EbayComboboxOption key={option.name} text={option.name} value={option.code} />)}
        </EbayCombobox>;
}`,...(T=(A=s.parameters)==null?void 0:A.docs)==null?void 0:T.source}}};const _=["Default","FloatingLabel","AutomaticallyFilterResults","SearchFiltering"];export{r as AutomaticallyFilterResults,m as Default,d as FloatingLabel,s as SearchFiltering,_ as __namedExportsOrder,X as default};
